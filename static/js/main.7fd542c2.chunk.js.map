{"version":3,"sources":["img/percolatesyes.jpg","img/percolatesno.jpg","components/Header.js","components/Results.js","components/helpers.js","components/Grid.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","React","Component","Results","Fragment","src","percolateyes","alt","height","percolateno","href","this","props","result","getRandomFromRange","min","max","Math","round","random","shuffleArray","array","i","length","j","floor","temp","Grid","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initializeArrays","newValues","state","values","parent","concat","size","setState","findRoot","row","column","rootElement","union","rowP","columnP","rowQ","columnQ","rootP","rootQ","unionNeighbours","changeValueOfRandomCell","rowsKeys","keys","_loop2","rowKey","cellsOfRow","keysOfClosedCells","filter","key","finished","randomClosedCell","parseInt","newStateValues","v","_loop","_ret","percolates","checkIfDone","message","calculateResults","percolated","isInProgres","countToRefresh","setTimeout","bind","assertThisInitialized","totalClosed","_loop3","percent","parseFloat","checkIfMemberOfPercolation","winningParent","drawSquare","counter","val","color","style","backgroundColor","isopen","start","-1.-1","-2.-2","_this2","x","components_Results","map","columnKey","onClick","disabled","App","components_Header","components_Grid","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.7fd542c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/percolatesyes.2debb7f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/percolatesno.e7e73a4e.jpg\";","import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<h1>Percolation Problem - Monte Carlo simulation</h1>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAssignment made as part of Alghorithms Course from Princeton\r\n\t\t\t\t\tUniversity at Coursera. It visualizes percolation problem.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport percolateyes from \"../img/percolatesyes.jpg\";\r\nimport percolateno from \"../img/percolatesno.jpg\";\r\n\r\nclass Results extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"desc\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tWe model a percolation system using an n-by-n grid of\r\n\t\t\t\t\t\tsites. Each site is either open or blocked. A full site\r\n\t\t\t\t\t\tis an open site that can be connected to an open site in\r\n\t\t\t\t\t\tthe top row via a chain of neighboring (left, right, up,\r\n\t\t\t\t\t\tdown) open sites. We say the system percolates if there\r\n\t\t\t\t\t\tis a full site in the bottom row. In other words, a\r\n\t\t\t\t\t\tsystem percolates if we fill all open sites connected to\r\n\t\t\t\t\t\tthe top row and that process fills some open site on the\r\n\t\t\t\t\t\tbottom row. (For the insulating/metallic materials\r\n\t\t\t\t\t\texample, the open sites correspond to metallic\r\n\t\t\t\t\t\tmaterials, so that a system that percolates has a\r\n\t\t\t\t\t\tmetallic path from top to bottom, with full sites\r\n\t\t\t\t\t\tconducting. For the porous substance example, the open\r\n\t\t\t\t\t\tsites correspond to empty space through which water\r\n\t\t\t\t\t\tmight flow, so that a system that percolates lets water\r\n\t\t\t\t\t\tfill open sites, flowing from top to bottom.)\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={percolateyes}\r\n\t\t\t\t\t\talt=\"System percolates\"\r\n\t\t\t\t\t\theight=\"250\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={percolateno}\r\n\t\t\t\t\t\talt=\"System percolates\"\r\n\t\t\t\t\t\theight=\"250\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tTo estimate the percolation threshold, consider the\r\n\t\t\t\t\t\tfollowing computational experiment:\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>&bull; Initialize all sites to be blocked.</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t&bull; Repeat the following until the system percolates:\r\n\t\t\t\t\t\tChoose a site uniformly at random among all blocked\r\n\t\t\t\t\t\tsites.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>&bull; Open the site. </p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThe fraction of sites that are opened when the system\r\n\t\t\t\t\t\tpercolates provides an estimate of the percolation\r\n\t\t\t\t\t\tthreshold.\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tSource:{\" \"}\r\n\t\t\t\t\t\t<a href=\"https://coursera.cs.princeton.edu/algs4/assignments/percolation/specification.php\">\r\n\t\t\t\t\t\t\thttps://coursera.cs.princeton.edu/algs4/assignments/percolation/specification.php\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"threshold\">\r\n\t\t\t\t\t<h2>{this.props.result}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Results;\r\n","export const getRandomFromRange = (min, max) => {\r\n\treturn Math.round(Math.random() * (max - min) + min);\r\n};\r\n\r\nexport const shuffleArray = array => {\r\n\tfor (var i = array.length - 1; i > 0; i--) {\r\n\t\tvar j = Math.floor(Math.random() * (i + 1));\r\n\t\tvar temp = array[i];\r\n\t\tarray[i] = array[j];\r\n\t\tarray[j] = temp;\r\n\t}\r\n\treturn array;\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport Results from \"./Results.js\";\r\nimport { getRandomFromRange, shuffleArray } from \"./helpers.js\";\r\n\r\nclass Grid extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tvalues: {},\r\n\t\t\tmessage: \"To estimate percolation threshold click 'Start':\",\r\n\t\t\tresult: \"Percolation threshold will be shown here.\",\r\n\t\t\tpercolated: false,\r\n\t\t\tisInProgres: \"\",\r\n\t\t\tcountToRefresh: false\r\n\t\t};\r\n\t\tthis.parent = {\r\n\t\t\t// {row.column}\r\n\t\t\t\"-1.-1\": \"-1.-1\", // Virtual top\r\n\t\t\t\"-2.-2\": \"-2.-2\" // Virtual bottom\r\n\t\t};\r\n\t\tthis.size = {\r\n\t\t\t\"-1.-1\": 1, // Virtual top\r\n\t\t\t\"-2.-2\": 1 // Virtual bottom\r\n\t\t};\r\n\t\tthis.finished = false;\r\n\t}\r\n\r\n\tinitializeArrays = () => {\r\n\t\tlet newValues = this.state.values;\r\n\t\tfor (let i = 0; i < 10; i++) {\r\n\t\t\tnewValues[i] = {};\r\n\t\t\tfor (let j = 0; j < 10; j++) {\r\n\t\t\t\tthis.parent[`${i}.${j}`] = `${i}.${j}`;\r\n\t\t\t\tthis.size[`${i}.${j}`] = 1;\r\n\t\t\t\tnewValues[i][j] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tvalues: newValues\r\n\t\t});\r\n\t};\r\n\r\n\tfindRoot = (row, column) => {\r\n\t\tlet rootElement = `${row}.${column}`;\r\n\t\twhile (rootElement !== this.parent[rootElement])\r\n\t\t\trootElement = this.parent[rootElement];\r\n\t\treturn rootElement;\r\n\t};\r\n\tunion = (rowP, columnP, rowQ, columnQ) => {\r\n\t\tlet rootP = this.findRoot(rowP, columnP);\r\n\t\tlet rootQ = this.findRoot(rowQ, columnQ);\r\n\t\tif (rootP === rootQ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.size[rootP] < this.size[rootQ]) {\r\n\t\t\tthis.parent[rootP] = rootQ;\r\n\t\t\tthis.size[rootQ] += this.size[rootP];\r\n\t\t} else {\r\n\t\t\tthis.parent[rootQ] = rootP;\r\n\t\t\tthis.size[rootP] += this.size[rootQ];\r\n\t\t}\r\n\t};\r\n\tunionNeighbours = (row, column) => {\r\n\t\tif (column > 0) {\r\n\t\t\tif (this.state.values[row][column - 1] === 1) {\r\n\t\t\t\tthis.union(row, column, row, column - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (column < 9) {\r\n\t\t\tif (this.state.values[row][column + 1] === 1) {\r\n\t\t\t\tthis.union(row, column, row, column + 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (row > 0) {\r\n\t\t\tif (this.state.values[row - 1][column] === 1) {\r\n\t\t\t\tthis.union(row, column, row - 1, column);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (row < 9) {\r\n\t\t\tif (this.state.values[row + 1][column] === 1) {\r\n\t\t\t\tthis.union(row, column, row + 1, column);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (row === 0) {\r\n\t\t\tthis.union(row, column, -1, -1);\r\n\t\t}\r\n\t\tif (row === 9) {\r\n\t\t\tthis.union(row, column, -2, -2);\r\n\t\t}\r\n\t};\r\n\r\n\tchangeValueOfRandomCell = () => {\r\n\t\tvar rowsKeys = shuffleArray(Object.keys(this.state.values));\r\n\t\tfor (let i = 0; i < rowsKeys.length; i++) {\r\n\t\t\tvar rowKey = rowsKeys[i];\r\n\t\t\tlet cellsOfRow = this.state.values[rowKey];\r\n\t\t\tlet keysOfClosedCells = Object.keys(cellsOfRow).filter(\r\n\t\t\t\tkey => cellsOfRow[key] === 0\r\n\t\t\t);\r\n\t\t\tif (keysOfClosedCells.length === 0 && i === rowsKeys.length - 1) {\r\n\t\t\t\tthis.finished = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (keysOfClosedCells.length === 0) continue;\r\n\r\n\t\t\tvar randomClosedCell =\r\n\t\t\t\tkeysOfClosedCells[\r\n\t\t\t\t\tgetRandomFromRange(0, keysOfClosedCells.length - 1)\r\n\t\t\t\t];\r\n\r\n\t\t\trowKey = parseInt(rowKey);\r\n\t\t\trandomClosedCell = parseInt(randomClosedCell);\r\n\r\n\t\t\tthis.unionNeighbours(rowKey, randomClosedCell);\r\n\r\n\t\t\tlet newStateValues = this.state.values;\r\n\t\t\tnewStateValues[rowKey][randomClosedCell] = 1;\r\n\r\n\t\t\tthis.setState({ values: newStateValues });\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tpercolates = () => {\r\n\t\treturn this.findRoot(-1, -1) === this.findRoot(-2, -2);\r\n\t};\r\n\r\n\tcheckIfDone = () => {\r\n\t\tif (this.percolates() || this.finished) {\r\n\t\t\tthis.setState({ message: \"It percolates!\" });\r\n\t\t\tthis.calculateResults();\r\n\t\t\tthis.setState({ percolated: true });\r\n\t\t\tthis.setState({ isInProgres: \"\" });\r\n\r\n\t\t\tthis.setState({ countToRefresh: true });\r\n\t\t} else {\r\n\t\t\tsetTimeout(\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tthis.changeValueOfRandomCell();\r\n\t\t\t\t\tthis.checkIfDone();\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\t80\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\tcalculateResults = () => {\r\n\t\tlet totalClosed = 0;\r\n\t\tlet rowsKeys = Object.keys(this.state.values);\r\n\t\tfor (let i = 0; i < rowsKeys.length; i++) {\r\n\t\t\tlet rowKey = rowsKeys[i];\r\n\t\t\tlet cellsOfRow = this.state.values[rowKey];\r\n\t\t\ttotalClosed += Object.keys(cellsOfRow).filter(\r\n\t\t\t\tkey => cellsOfRow[key] === 0\r\n\t\t\t).length;\r\n\t\t}\r\n\t\tlet percent = (100 - parseFloat(totalClosed)) / 100;\r\n\t\tthis.setState({ result: `Percolation threshold is ${percent}` });\r\n\t};\r\n\tcheckIfMemberOfPercolation = (row, column) => {\r\n\t\tif (this.state.percolated === false) return false;\r\n\t\tlet winningParent = this.findRoot(-1, -1);\r\n\r\n\t\tObject.keys(this.parent).filter(\r\n\t\t\tkey => this.parent[key] === winningParent\r\n\t\t);\r\n\t};\r\n\r\n\tdrawSquare = (row, column, counter, val) => {\r\n\t\tthis.checkIfMemberOfPercolation(row, column);\r\n\t\tlet color = \"#000\";\r\n\t\tval === 1 ? (color = \"#fff\") : (color = \"#000\");\r\n\t\tif (this.findRoot(row, column) === this.findRoot(-1, -1)) {\r\n\t\t\tcolor = \"#008fe6\";\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"square\"\r\n\t\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\t\tkey={counter}\r\n\t\t\t\tisopen={val}\r\n\t\t\t>\r\n\t\t\t\t<p>{counter}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\tstart = () => {\r\n\t\tthis.setState({ message: \"In progress...\" });\r\n\t\tthis.setState({ isInProgres: \"disabled\" });\r\n\r\n\t\tif (!this.state.countToRefresh) {\r\n\t\t\tthis.checkIfDone();\r\n\t\t} else {\r\n\t\t\tthis.initializeArrays();\r\n\t\t\tthis.checkIfDone();\r\n\t\t}\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tthis.initializeArrays();\r\n\t}\r\n\tcomponentDidUpdate() {}\r\n\trender() {\r\n\t\tvar x = -1;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container-results\">\r\n\t\t\t\t\t<Results result={this.state.result} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container-grid\">\r\n\t\t\t\t\t{Object.keys(this.state.values).map(rowKey => {\r\n\t\t\t\t\t\treturn Object.keys(this.state.values[rowKey]).map(\r\n\t\t\t\t\t\t\tcolumnKey => {\r\n\t\t\t\t\t\t\t\tx++;\r\n\t\t\t\t\t\t\t\treturn this.drawSquare(\r\n\t\t\t\t\t\t\t\t\trowKey,\r\n\t\t\t\t\t\t\t\t\tcolumnKey,\r\n\t\t\t\t\t\t\t\t\tx,\r\n\t\t\t\t\t\t\t\t\tthis.state.values[rowKey][columnKey]\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t<h2>{this.state.message}</h2>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={`button btn btn-primary btn-block ${this.state.isInProgres}`}\r\n\t\t\t\t\t\tonClick={this.start}\r\n\t\t\t\t\t\tdisabled={this.state.isInProgres}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport Grid from \"./Grid.js\";\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Grid />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./components/App.js\";\r\nimport \"./css/bootstrap.min.css\";\r\nimport \"./css/style.css\";\r\n\r\nrender(<App />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}