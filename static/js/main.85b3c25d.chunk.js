(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,function(e,t,n){e.exports=n.p+"static/media/percolatesyes.2debb7f7.jpg"},function(e,t,n){e.exports=n.p+"static/media/percolatesno.e7e73a4e.jpg"},function(e,t,n){e.exports=n(18)},,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),s=n(8),r=n(1),i=n(2),c=n(4),l=n(3),u=n(5),h=function(e){function t(){return Object(r.a)(this,t),Object(c.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return o.a.createElement("div",{className:"header"},o.a.createElement("h1",null,"Percolation Problem - Monte Carlo simulation"),o.a.createElement("p",null,"Assignment made as part of Alghorithms Course from Princeton University at Coursera. It visualizes percolation problem."))}}]),t}(o.a.Component),p=n(6),f=n(9),m=n.n(f),d=n(10),b=n.n(d),v=function(e){function t(){return Object(r.a)(this,t),Object(c.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"desc"},o.a.createElement("p",null,"We model a percolation system using an n-by-n grid of sites. Each site is either open or blocked. A full site is an open site that can be connected to an open site in the top row via a chain of neighboring (left, right, up, down) open sites. We say the system percolates if there is a full site in the bottom row. In other words, a system percolates if we fill all open sites connected to the top row and that process fills some open site on the bottom row. (For the insulating/metallic materials example, the open sites correspond to metallic materials, so that a system that percolates has a metallic path from top to bottom, with full sites conducting. For the porous substance example, the open sites correspond to empty space through which water might flow, so that a system that percolates lets water fill open sites, flowing from top to bottom.)"),o.a.createElement("img",{src:m.a,alt:"System percolates",height:"250"}),o.a.createElement("img",{src:b.a,alt:"System percolates",height:"250"}),o.a.createElement("p",null,"To estimate the percolation threshold, consider the following computational experiment:"),o.a.createElement("p",null,"\u2022 Initialize all sites to be blocked."),o.a.createElement("p",null,"\u2022 Repeat the following until the system percolates: Choose a site uniformly at random among all blocked sites."),o.a.createElement("p",null,"\u2022 Open the site. "),o.a.createElement("p",null,"The fraction of sites that are opened when the system percolates provides an estimate of the percolation threshold."),o.a.createElement("p",null,"Source:"," ",o.a.createElement("a",{href:"https://coursera.cs.princeton.edu/algs4/assignments/percolation/specification.php"},"https://coursera.cs.princeton.edu/algs4/assignments/percolation/specification.php"))),o.a.createElement("div",{className:"threshold"},o.a.createElement("h2",null,this.props.result)))}}]),t}(o.a.Component),g=function(e,t){return Math.round(Math.random()*(t-e)+e)},y=function(e){for(var t=e.length-1;t>0;t--){var n=Math.floor(Math.random()*(t+1)),a=e[t];e[t]=e[n],e[n]=a}return e},O=function(e){function t(){var e;return Object(r.a)(this,t),(e=Object(c.a)(this,Object(l.a)(t).call(this))).initializeArrays=function(){for(var t=e.state.values,n=0;n<10;n++){t[n]={};for(var a=0;a<10;a++)e.parent["".concat(n,".").concat(a)]="".concat(n,".").concat(a),e.size["".concat(n,".").concat(a)]=1,t[n][a]=0}e.setState({values:t})},e.findRoot=function(t,n){for(var a="".concat(t,".").concat(n);a!==e.parent[a];)a=e.parent[a];return a},e.union=function(t,n,a,o){var s=e.findRoot(t,n),r=e.findRoot(a,o);s!==r&&(e.size[s]<e.size[r]?(e.parent[s]=r,e.size[r]+=e.size[s]):(e.parent[r]=s,e.size[s]+=e.size[r]))},e.unionNeighbours=function(t,n){n>0&&1===e.state.values[t][n-1]&&e.union(t,n,t,n-1),n<9&&1===e.state.values[t][n+1]&&e.union(t,n,t,n+1),t>0&&1===e.state.values[t-1][n]&&e.union(t,n,t-1,n),t<9&&1===e.state.values[t+1][n]&&e.union(t,n,t+1,n),0===t&&e.union(t,n,-1,-1),9===t&&e.union(t,n,-2,-2)},e.changeValueOfRandomCell=function(){var t=y(Object.keys(e.state.values)),n=function(n){o=t[n];var a=e.state.values[o],r=Object.keys(a).filter(function(e){return 0===a[e]});if(0===r.length&&n===t.length-1)return e.finished=!0,"break";if(0===r.length)return"continue";s=r[g(0,r.length-1)],o=parseInt(o),s=parseInt(s),e.unionNeighbours(o,s);var i=e.state.values;return i[o][s]=1,e.setState({values:i}),{v:void 0}};e:for(var a=0;a<t.length;a++){var o,s,r=n(a);switch(r){case"break":break e;case"continue":continue;default:if("object"===typeof r)return r.v}}},e.percolates=function(){return e.findRoot(-1,-1)===e.findRoot(-2,-2)},e.checkIfDone=function(){e.percolates()||e.finished?(e.setState({message:"It percolates!"}),e.calculateResults(),e.setState({percolated:!0}),e.setState({isInProgres:""}),e.setState({countToRefresh:!0})):setTimeout(function(){this.changeValueOfRandomCell(),this.checkIfDone()}.bind(Object(p.a)(Object(p.a)(e))),80)},e.calculateResults=function(){for(var t=0,n=Object.keys(e.state.values),a=function(a){var o=n[a],s=e.state.values[o];t+=Object.keys(s).filter(function(e){return 0===s[e]}).length},o=0;o<n.length;o++)a(o);var s=(100-parseFloat(t))/100;e.setState({result:"Percolation threshold is ".concat(s)})},e.checkIfMemberOfPercolation=function(t,n){if(!1===e.state.percolated)return!1;var a=e.findRoot(-1,-1);Object.keys(e.parent).filter(function(t){return e.parent[t]===a})},e.drawSquare=function(t,n,a,s){e.checkIfMemberOfPercolation(t,n);var r="#000";return r=1===s?"#fff":"#000",e.findRoot(t,n)===e.findRoot(-1,-1)&&(r="#008fe6"),o.a.createElement("div",{className:"square",style:{backgroundColor:r},key:a,isopen:s},o.a.createElement("p",null,a))},e.start=function(){e.setState({message:"In progress..."}),e.setState({isInProgres:"disabled"}),e.state.countToRefresh?(e.initializeArrays(),e.checkIfDone()):e.checkIfDone()},e.state={values:{},message:"To estimate percolation threshold click 'Start':",result:"Percolation threshold will be shown here.",percolated:!1,isInProgres:"",countToRefresh:!1},e.parent={"-1.-1":"-1.-1","-2.-2":"-2.-2"},e.size={"-1.-1":1,"-2.-2":1},e.finished=!1,e}return Object(u.a)(t,e),Object(i.a)(t,[{key:"componentDidMount",value:function(){this.initializeArrays()}},{key:"componentDidUpdate",value:function(){}},{key:"render",value:function(){var e=this,t=-1;return o.a.createElement("div",null,o.a.createElement("div",{className:"container-results"},o.a.createElement(v,{result:this.state.result})),o.a.createElement("div",{className:"container-grid"},Object.keys(this.state.values).map(function(n){return Object.keys(e.state.values[n]).map(function(a){return t++,e.drawSquare(n,a,t,e.state.values[n][a])})}),o.a.createElement("h2",null,this.state.message),o.a.createElement("button",{className:"button btn btn-primary btn-block ".concat(this.state.isInProgres),onClick:this.start,disabled:this.state.isInProgres},"Start")))}}]),t}(o.a.Component),j=function(e){function t(){return Object(r.a)(this,t),Object(c.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(h,null),o.a.createElement(O,null))}}]),t}(o.a.Component);n(16),n(17);Object(s.render)(o.a.createElement(j,null),document.querySelector("#main"))}],[[11,1,2]]]);
//# sourceMappingURL=main.85b3c25d.chunk.js.map